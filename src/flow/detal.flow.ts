import { addKeyword, EVENTS } from '@builderbot/bot';
import { MemoryDB as Database } from '@builderbot/bot'
import { BaileysProvider as Provider } from '@builderbot/provider-baileys'
import { addStringToBlacklist, enviarMensaje } from '../utils/utils';
import { numberClean } from './mute.flow';
import { reset, stop } from '../idle-custom'
export const detalFlow = addKeyword<Provider, Database>('detal')
.addAnswer('üì¶ Consulta nuestro cat√°logo:',
    { media:  `${process.env.CATALOGO_MAYORISTA}` })
    .addAnswer(
        [
            'Para poder crear tu perfil y agilizar tu pedido, por favor proporci√≥name los siguientes datos:',
            '',
            '‚Ä¢ Nombre completo üë® ',
            '‚Ä¢ N√∫mero de identificaci√≥n (CC) üÜî',
            '‚Ä¢ Correo electr√≥nico üì©',
            '‚Ä¢ Ciudad y Departamento üåÜ',
            '‚Ä¢ Direcci√≥n completa de env√≠o üè†',
            '‚Ä¢ Productos (Referencia y Cantidad) üì¶',
            '',
            '*¬°Recuerda que el costo del env√≠o lo asume el cliente!*'
        ].join('\n'),
        { delay: 0, capture: false }
    )
    .addAction(async (ctx, { blacklist, flowDynamic}) => {
        const toMute = numberClean(ctx.from);
        console.log("entro")
        await  addStringToBlacklist(toMute);
        blacklist.add(toMute);
        await  ejemploEnviarMensaje(toMute);
        return;
    })


    // Ejemplo de uso de la funci√≥n enviarMensaje
    async function ejemploEnviarMensaje(numeroAtencion) {
        const numero = process.env.NUMERO;
        const mensaje = `*Agente*: ${numeroAtencion}`;
        await enviarMensaje(numero, mensaje, null);
    }



